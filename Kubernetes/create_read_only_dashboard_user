#!/bin/bash
#set the actual username needed to be used
user="readonly-dashboard-user" 
#create user
kubectl create sa $user -n kubernetes-dashboard
#create cluster role
cat <<EOF | kubectl apply -f -
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: $user
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods", "namespaces", "configmaps", "pods/log"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods/exec"]
  verbs: ["create"]  
EOF
#bind the cluster role to the user
kubectl create clusterrolebinding $user --serviceaccount=kubernetes-dashboard:$user --clusterrole=$user
#create secret for the user
kubectl apply -f - <<EOF
apiVersion: v1
kind: Secret
metadata:
  name: $user-token
  namespace: kubernetes-dashboard
  annotations:
    kubernetes.io/service-account.name: $user
type: kubernetes.io/service-account-token
EOF
#add the password to the user created
kubectl patch serviceaccount $user -p '{"secrets": [{"name": "$user-token"}]}' -n kubernetes-dashboard
#check the password is assigned
kubectl describe serviceaccount $user -n kubernetes-dashboard
#get the dashboard token
kubectl get secret $user-token -n kubernetes-dashboard -o jsonpath="{.data.token}" | base64 --decode && echo ''